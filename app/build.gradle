plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.composeapplication"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    //define types of product flavor:
    flavorDimensions "paidMode", "minSdk"
    productFlavors {
        free {
            dimension "paidMode"
            applicationIdSuffix ".free"
        }
        paid {
            dimension "paidMode"
            applicationIdSuffix ".paid"
        }
        minSdk30 {
            dimension "minSdk"
            minSdk 30
        }
        minSdk21 {
            dimension "minSdk"
            minSdk 21
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        //define custom build types
        beta {
            minifyEnabled false
            //append to package-name:
            applicationIdSuffix ".beta"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    //implements only for specific build variant.
    //freeMinSdk21DebugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
}

task printHelloWord() {
    println "Hello word"
    doFirst {
        println "First"
    }
    doLast {
        println "Last"
    }
}

/**
 * Registers tasks to execute them in the Terminal.
 * */
task registerSomeTasks() {
    10.times { i ->
        tasks.register("task$i") {
            doLast {
                println "Task number $i"
            }
        }
    }
    //Makes sure these tasks run before task1
    tasks.named("task1") {
        dependsOn "task4", "task5", "task6"
    }
    //Makes sure task1 runs before task registerSomeTasks()
    dependsOn "task1"
}

/**
 * A task for every time we build our project, copy the apk file to destinationDir and rename it and
 * also before copying apk file run unit tests.
 * */
task copyApk(type: Copy, dependsOn: "test") {
    def sourceDir = layout.buildDirectory.dir("intermediates/apk/freeMinSdk21/debug/app-free-minSdk21-debug.apk")
    def destinationDir = "$rootDir/apk"
    from sourceDir
    into destinationDir
    rename "app-free-minSdk21-debug.apk", "gradle-experimental.apk"
    doLast {
        def file = new File(destinationDir, "gradle-experimental.apk")
        ant.checksum file: file.path
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == "assembleDebug") {
        task.finalizedBy "copyApk"
    }
}